def ExtendedEuclidAlgo(a, b):     
    # Base Case
    if a == 0 :
        return b, 0, 1
         
    gcd, x1, y1 = ExtendedEuclidAlgo(b % a, a)
     
    x = y1 - (b // a) * x1
    y = x1
     
    return gcd, x, y
     

def Congruence(a, b, n):
     
    a = a % n
    b = b % n
    u = 0
    v = 0
     
    d, u, v = ExtendedEuclidAlgo(a, n)
     
    # No solution exists
    if (b % d != 0):
        print(-1)
        return
     
    # Else, initialize the value of x0
    x0 = (u * (b // d)) % n
    if (x0 < 0):
        x0 += N
     
    # Pr all the answers
    for i in range(d):
        print((x0 + i * (n // d)) % n, end = " ")
'''
n = 1593089977489628213419978935847037520292814625191902216371975
a = 1085484459548069946264190994325065981547479490357385174198606
b = 953189746439821656094084356255725844528749341834716784445794
'''
'''
n = 1604381279648013370121337611949677864830039917668320704906912
a = 363513302982222769246854729203529628172715297372073676369299
b = 1306899432917281278335140993361301678049317527759257978568241
'''
'''
n = 591375382219300240363628802132113226233154663323164696317092
a = 1143601365013264416361441429727110867366620091483828932889862
b = 368444135753187037947211618249879699701466381631559610698826
'''
n = 72223241701063812950018534557861370515090379790101401906496
a = 798442746309714903219853299207137826650460450190001016593820
b = 263077027284763417836483401088884721142505761791336585685868


Congruence(a, b, n)
 
